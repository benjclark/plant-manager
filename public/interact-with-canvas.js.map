{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/draw-on-canvas.js","src/interact-with-canvas.js","src/mouse-event-handlers.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"interact-with-canvas.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function clearCanvas() {\n    const canvas = document.querySelector('canvas');\n    const canvasContext = canvas.getContext('2d');\n    canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction drawRectangle(x, y, w, h) {\n    const canvasContext = document.querySelector('canvas').getContext('2d');\n    canvasContext.beginPath();\n    canvasContext.rect(x, y, w, h);\n    canvasContext.closePath();\n    canvasContext.fill();\n}\n\nfunction drawAll() {\n    const pm = window.plantManager;\n    const canvas = document.querySelector('canvas');\n    const canvasContext = canvas.getContext('2d');\n    clearCanvas();\n    canvasContext.fillStyle = \"#af865d3d\";\n    drawRectangle(0, 0, canvas.width, canvas.height);\n    for (let i = 0; i < pm.rectangles.length; i++) {\n        const r = pm.rectangles[i];\n        canvasContext.fillStyle = r.fill;\n        drawRectangle(r.x, r.y, r.width, r.height);\n    }\n}\n\nmodule.exports = {\n    clearCanvas,\n    drawRectangle,\n    drawAll\n};","const mouseEventHandlers = require('./mouse-event-handlers');\nconst drawOnCanvas = require('./draw-on-canvas');\n\nconst canvas = document.querySelector('canvas');\nconst canvasContext = canvas.getContext('2d');\n\nfunction renderEditBedFormForCurrentlySelectedRect() {\n    const currentSelected = window.plantManager.mouseEventVariables.currentRectSelected;\n    if (!currentSelected) {\n        return;\n    }\n\n    const updateBedForm = document.querySelector('form[data-update-bed]');\n    const name = currentSelected.name;\n    const width = currentSelected.width;\n    const height = currentSelected.height;\n    const fill = currentSelected.fill;\n    const soilCharacteristics = currentSelected.soil_characteristics;\n    const type = currentSelected.bed_type;\n\n\n    updateBedForm.querySelector('[data-bed-name]').value = name;\n    updateBedForm.querySelector('[data-bed-width]').value = width;\n    updateBedForm.querySelector('[data-bed-height]').value = height;\n    updateBedForm.querySelector('[data-bed-colour]').value = fill;\n    updateBedForm.querySelector('[data-bed-soil-characteristics]').value = soilCharacteristics;\n    updateBedForm.querySelector('[data-bed-type]').value = type;\n}\n\nwindow.plantManager = {\n    canvasOffsetX: canvas.getBoundingClientRect().left,\n    canvasOffsetY: canvas.getBoundingClientRect().top,\n    rectangles: [],\n    renderEditBedFormForCurrentlySelectedRect: renderEditBedFormForCurrentlySelectedRect\n};\nconst pm = window.plantManager;\n\ncanvasContext.fillStyle = \"#af865d3d\";\ncanvasContext.fillRect(0,0, canvas.width, canvas.height);\n\nmouseEventHandlers.setupMouseEventVariables();\ncanvas.onmousedown = mouseEventHandlers.mouseDownHandler;\ncanvas.onmouseup = mouseEventHandlers.mouseUpHandler;\ncanvas.onmousemove = mouseEventHandlers.mouseMoveHandler;\n\ndrawOnCanvas.drawAll();\npm.drawAll = drawOnCanvas.drawAll;","const drawOnCanvas = require('./draw-on-canvas');\n\nfunction mouseUpHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    e.preventDefault();\n    e.stopPropagation();\n\n    // clear all the dragging flags\n    mouseEventVars.somethingIsBeingDragged = false;\n\n    for (let z = 0; z < pm.rectangles.length; z++) {\n        pm.rectangles[z].isDragging = false;\n    }\n}\n\nfunction mouseDownHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    e.preventDefault();\n    e.stopPropagation();\n\n    // get the current mouse position\n    const mx = parseInt(e.clientX - pm.canvasOffsetX);\n    const my = parseInt(e.clientY - pm.canvasOffsetY);\n\n    // clear all the dragging flags\n    mouseEventVars.somethingIsBeingDragged = false;\n\n    // test each rect to see if mouse is inside\n    for (let i = (pm.rectangles.length - 1); i >= 0; i--) {\n        const r = pm.rectangles[i];\n        if (mx > parseInt(r.x, 10) && mx < parseInt(r.x, 10) + parseInt(r.width, 10) && my > parseInt(r.y, 10) && my < parseInt(r.y, 10) + parseInt(r.height, 10)) {\n            // if yes, set that rects isDragging=true\n            mouseEventVars.somethingIsBeingDragged = true;\n            mouseEventVars.currentRectSelected = r;\n            r.isDragging = true;\n            pm.renderEditBedFormForCurrentlySelectedRect();\n            break;\n        }\n    }\n    // save the current mouse position\n    mouseEventVars.startX = mx;\n    mouseEventVars.startY = my;\n}\n\nfunction mouseMoveHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    // if we're dragging anything...\n    if (mouseEventVars.somethingIsBeingDragged) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        // get the current mouse position\n        const mx = parseInt(e.clientX - pm.canvasOffsetX);\n        const my = parseInt(e.clientY - pm.canvasOffsetY);\n\n        // calculate the distance the mouse has moved\n        // since the last mousemove\n        const dx = mx - mouseEventVars.startX;\n        const dy = my - mouseEventVars.startY;\n\n        // move each rect that isDragging\n        // by the distance the mouse has moved\n        // since the last mousemove\n        for (let i = 0; i < pm.rectangles.length; i++) {\n            const r = pm.rectangles[i];\n            if (r.isDragging) {\n                r.x += dx;\n                r.y += dy;\n            }\n        }\n\n        // redraw the scene with the new rect positions\n        drawOnCanvas.drawAll();\n\n        // reset the starting mouse position for the next mousemove\n        mouseEventVars.startX = mx;\n        mouseEventVars.startY = my;\n    }\n}\n\nfunction setupMouseEventVariables() {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables = {};\n    mouseEventVars.somethingIsBeingDragged = false;\n    mouseEventVars.currentRectSelected = undefined;\n    mouseEventVars.startX = undefined;\n    mouseEventVars.startY = undefined;\n}\n\nmodule.exports = {\n    mouseUpHandler,\n    mouseDownHandler,\n    mouseMoveHandler,\n    setupMouseEventVariables\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}