{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/draw-on-canvas.js","src/interact-with-canvas.js","src/mouse-event-handlers.js"],"names":[],"mappingsnfile":"interact-with-canvas.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function clearCanvas() {\n    const canvas = document.querySelector('canvas');\n    const canvasContext = canvas.getContext('2d');\n    canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction drawBed(x, y, w, h) {\n    const canvasContext = document.querySelector('canvas').getContext('2d');\n    canvasContext.beginPath();\n    canvasContext.rect(x, y, w, h);\n    canvasContext.closePath();\n    canvasContext.fill();\n}\n\nfunction drawPlant(x, y, w, h, fileName) {\n    const canvas = document.querySelector('canvas');\n    const ctx = canvas.getContext('2d');\n    const image = new Image();\n    image.src = `/${fileName}`;\n    image.onload = () => {\n        ctx.drawImage(image, x, y, w, h);\n    };\n}\n\nfunction drawAll() {\n    const pm = window.plantManager;\n    const canvas = document.querySelector('canvas');\n    const canvasContext = canvas.getContext('2d');\n    clearCanvas();\n    canvasContext.fillStyle = \"#af865d3d\";\n    drawBed(0, 0, canvas.width, canvas.height);\n    for (let i = 0; i < pm.beds.length; i++) {\n        const b = pm.beds[i];\n        canvasContext.fillStyle = b.fill;\n        drawBed(b.x, b.y, b.width, b.height);\n    }\n    for (let i = 0; i < pm.plants.length; i++) {\n        const p = pm.plants[i];\n        drawPlant(p.x, p.y, p.width, p.height, p.imageFileName);\n    }\n}\n\nmodule.exports = {\n    clearCanvas,\n    drawBed,\n    drawAll\n};\n","const mouseEventHandlers = require('./mouse-event-handlers');\nconst drawOnCanvas = require('./draw-on-canvas');\n\nconst canvas = document.querySelector('canvas');\nconst canvasContext = canvas.getContext('2d');\n\nfunction detectIfPlantIsInABed() {\n    const currentSelected = window.plantManager.mouseEventVariables.currentRectSelected;\n    if (!currentSelected) {\n        return;\n    }\n    // make sure it is a plant and not a bed\n    if (currentSelected.bedType) {\n        return;\n    }\n\n    const plant_x = currentSelected.x;\n    const plant_y = currentSelected.y;\n\n    const pm = window.plantManager;\n    for (let i = (pm.beds.length - 1); i >= 0; i--) {\n        const b = pm.beds[i];\n        if (plant_x > parseInt(b.x, 10) && plant_x < parseInt(b.x, 10) + parseInt(b.width, 10) && plant_y > parseInt(b.y, 10) && plant_y < parseInt(b.y, 10) + parseInt(b.height, 10)) {\n            // if yes, set that rects isDragging=true\n            return b.name\n        }\n    }\n    return false;\n}\n\nfunction renderEditFormForCurrentlySelectedPlant() {\n    const currentSelected = window.plantManager.mouseEventVariables.currentRectSelected;\n    if (!currentSelected) {\n        return;\n    }\n\n    const currentBed = detectIfPlantIsInABed();\n\n    const updateBedForm = document.querySelector('form[data-update-plant]');\n    const name = currentSelected.name;\n    const bed = currentBed;\n    currentSelected.bed = currentBed;\n    const type = currentSelected.type;\n    const datePlanted = currentSelected.datePlanted;\n    const lastCrop = currentSelected.lastCrop;\n    const nextCrop = currentSelected.nextCrop;\n\n    updateBedForm.querySelector('[data-plant-name]').value = name;\n    updateBedForm.querySelector('[data-plant-bed]').value = bed;\n    updateBedForm.querySelector('[data-plant-type]').value = type;\n    updateBedForm.querySelector('[data-plant-date-planted]').value = datePlanted;\n    updateBedForm.querySelector('[data-plant-last-crop]').value = lastCrop;\n    updateBedForm.querySelector('[data-plant-next-crop]').value = nextCrop;\n\n\n}\n\nfunction renderEditFormForCurrentlySelectedBed() {\n    const currentSelected = window.plantManager.mouseEventVariables.currentRectSelected;\n    if (!currentSelected) {\n        return;\n    }\n\n    const updateBedForm = document.querySelector('form[data-update-bed]');\n    const name = currentSelected.name;\n    const width = currentSelected.width;\n    const height = currentSelected.height;\n    const fill = currentSelected.fill;\n    const soilCharacteristics = currentSelected.soilCharacteristics;\n    const type = currentSelected.bedType;\n\n    updateBedForm.querySelector('[data-bed-name]').value = name;\n    updateBedForm.querySelector('[data-bed-width]').value = width;\n    updateBedForm.querySelector('[data-bed-height]').value = height;\n    updateBedForm.querySelector('[data-bed-colour]').value = fill;\n    updateBedForm.querySelector('[data-bed-soil-characteristics]').value = soilCharacteristics;\n    updateBedForm.querySelector('[data-bed-type]').value = type;\n}\n\nwindow.plantManager = {\n    canvasOffsetX: canvas.getBoundingClientRect().left,\n    canvasOffsetY: canvas.getBoundingClientRect().top,\n    beds: [],\n    plants: [],\n    renderEditFormForCurrentlySelectedBed: renderEditFormForCurrentlySelectedBed,\n    renderEditFormForCurrentlySelectedPlant: renderEditFormForCurrentlySelectedPlant\n};\nconst pm = window.plantManager;\n\ncanvasContext.fillStyle = \"#af865d3d\";\ncanvasContext.fillRect(0,0, canvas.width, canvas.height);\n\nmouseEventHandlers.setupMouseEventVariables();\ncanvas.onmousedown = mouseEventHandlers.mouseDownHandler;\ncanvas.onmouseup = mouseEventHandlers.mouseUpHandler;\ncanvas.onmousemove = mouseEventHandlers.mouseMoveHandler;\n\ndrawOnCanvas.drawAll();\npm.drawAll = drawOnCanvas.drawAll;\n","const drawOnCanvas = require('./draw-on-canvas');\n\nfunction mouseUpHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    e.preventDefault();\n    e.stopPropagation();\n\n    mouseEventVars.somethingIsBeingDragged = false;\n\n    for (let z = 0; z < pm.beds.length; z++) {\n        pm.beds[z].isDragging = false;\n    }\n    for (let z = 0; z < pm.plants.length; z++) {\n        pm.plants[z].isDragging = false;\n    }\n}\n\nfunction dragIfClicked(rects, pm, mx, my, mouseEventVars) {\n    for (let i = (rects.length - 1); i >= 0; i--) {\n        const rect = rects[i];\n        if (mx > parseInt(rect.x, 10) && mx < parseInt(rect.x, 10) + parseInt(rect.width, 10) && my > parseInt(rect.y, 10) && my < parseInt(rect.y, 10) + parseInt(rect.height, 10)) {\n            mouseEventVars.somethingIsBeingDragged = true;\n            mouseEventVars.currentRectSelected = rect;\n            rect.isDragging = true;\n            pm.renderEditFormForCurrentlySelectedBed();\n            break;\n        }\n    }\n}\n\nfunction mouseDownHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    e.preventDefault();\n    e.stopPropagation();\n\n    const mx = parseInt(e.clientX - pm.canvasOffsetX);\n    const my = parseInt(e.clientY - pm.canvasOffsetY);\n\n    mouseEventVars.somethingIsBeingDragged = false;\n\n    dragIfClicked(pm.plants, pm, mx, my, mouseEventVars);\n    if (mouseEventVars.somethingIsBeingDragged === false) {\n        dragIfClicked(pm.beds, pm, mx, my, mouseEventVars);\n    }\n    mouseEventVars.startX = mx;\n    mouseEventVars.startY = my;\n}\n\nfunction mouseMoveHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    if (mouseEventVars.somethingIsBeingDragged) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const mx = parseInt(e.clientX - pm.canvasOffsetX);\n        const my = parseInt(e.clientY - pm.canvasOffsetY);\n\n        const dx = mx - mouseEventVars.startX;\n        const dy = my - mouseEventVars.startY;\n\n        for (let i = 0; i < pm.beds.length; i++) {\n            const b = pm.beds[i];\n            if (b.isDragging) {\n                b.x += dx;\n                b.y += dy;\n            }\n        }\n\n        for (let i = 0; i < pm.plants.length; i++) {\n            const p = pm.plants[i];\n            if (p.isDragging) {\n                p.x += dx;\n                p.y += dy;\n            }\n        }\n\n        drawOnCanvas.drawAll();\n\n        mouseEventVars.startX = mx;\n        mouseEventVars.startY = my;\n    }\n}\n\nfunction setupMouseEventVariables() {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables = {};\n    mouseEventVars.somethingIsBeingDragged = false;\n    mouseEventVars.currentRectSelected = undefined;\n    mouseEventVars.startX = undefined;\n    mouseEventVars.startY = undefined;\n}\n\nmodule.exports = {\n    mouseUpHandler,\n    mouseDownHandler,\n    mouseMoveHandler,\n    setupMouseEventVariables\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}