{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/draw-on-canvas.js","src/interact-with-canvas.js","src/mouse-event-handlers.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtfile":"interact-with-canvas.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function clearCanvas() {\n    const canvas = document.querySelector('canvas');\n    const canvasContext = canvas.getContext('2d');\n    canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction drawRectangle(x, y, w, h) {\n    const canvasContext = document.querySelector('canvas').getContext('2d');\n    canvasContext.beginPath();\n    canvasContext.rect(x, y, w, h);\n    canvasContext.closePath();\n    canvasContext.fill();\n}\n\nfunction drawAll() {\n    const pm = window.plantManager;\n    const canvas = document.querySelector('canvas');\n    const canvasContext = canvas.getContext('2d');\n    clearCanvas();\n    canvasContext.fillStyle = \"#af865d3d\";\n    drawRectangle(0, 0, canvas.width, canvas.height);\n    for (let i = 0; i < pm.rectangles.length; i++) {\n        const r = pm.rectangles[i];\n        canvasContext.fillStyle = r.fill;\n        drawRectangle(r.x, r.y, r.width, r.height);\n    }\n}\n\nmodule.exports = {\n    clearCanvas,\n    drawRectangle,\n    drawAll\n};","const mouseEventHandlers = require('./mouse-event-handlers');\nconst drawOnCanvas = require('./draw-on-canvas');\n\nconst canvas = document.querySelector('canvas');\nconst canvasContext = canvas.getContext('2d');\n\nwindow.plantManager = {\n    canvasOffsetX: canvas.getBoundingClientRect().left,\n    canvasOffsetY: canvas.getBoundingClientRect().top,\n    rectangles: []\n};\nconst pm = window.plantManager;\n\ncanvasContext.fillStyle = \"#af865d3d\";\ncanvasContext.fillRect(0,0, canvas.width, canvas.height);\n\nmouseEventHandlers.setupMouseEventVariables();\ncanvas.onmousedown = mouseEventHandlers.mouseDownHandler;\ncanvas.onmouseup = mouseEventHandlers.mouseUpHandler;\ncanvas.onmousemove = mouseEventHandlers.mouseMoveHandler;\n\ndrawOnCanvas.drawAll();\npm.drawAll = drawOnCanvas.drawAll;","const drawOnCanvas = require('./draw-on-canvas');\n\nfunction mouseUpHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    e.preventDefault();\n    e.stopPropagation();\n\n    // clear all the dragging flags\n    mouseEventVars.dragok = false;\n\n    for (let z = 0; z < pm.rectangles.length; z++) {\n        pm.rectangles[z].isDragging = false;\n    }\n\n    // for (let i = 0; i < pm.rectangles.length; i++) {\n    //     const r = pm.rectangles[i];\n    //     const bed_name = r.name;\n    //     const bed_x = r.x;\n    //     const bed_y = r.y;\n    //     console.log({bed_name, bed_x, bed_y});\n    //     post('/updateRecPosition', {bed_name, bed_x, bed_y});\n    // }\n}\n\nfunction mouseDownHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    e.preventDefault();\n    e.stopPropagation();\n\n    // get the current mouse position\n    const mx = parseInt(e.clientX - pm.canvasOffsetX);\n    const my = parseInt(e.clientY - pm.canvasOffsetY);\n\n    // test each rect to see if mouse is inside\n    mouseEventVars.dragok = false;\n    for (let i = 0; i < pm.rectangles.length; i++) {\n        const r = pm.rectangles[i];\n        if (mx > r.x && mx < (r.x + r.width) && my > r.y && my < (r.y + r.height)) {\n            // if yes, set that rects isDragging=true\n            console.log('rec just started dragging  ', r);\n            console.log((mx > r.x) +\"  \"+ (mx < r.x + r.width) +\"  \"+ (my > r.y) +\"  \"+ (my < r.y + r.height));\n            console.log(\"rec \" + r.name + \" - mouse x position \" + mx + \" is greater than rectangle x \" + r.x);\n            console.log(\"rec \" + r.name + \" - mouse x position \" + mx + \" is less than rectangle x \" + r.x + \" plus rectangle width \" + r.width);\n            console.log(\"rec \" + r.name + \" - mouse y position \" + my + \" is greater than rectangle y \" + r.y);\n            console.log(\"rec \" + r.name + \" - mouse y position \" + my + \" is less than rectangle y \" + r.y + \" plus rectangle height \" + r.height);\n            mouseEventVars.dragok = true;\n            r.isDragging = true;\n        }\n    }\n    // save the current mouse position\n    mouseEventVars.startX = mx;\n    mouseEventVars.startY = my;\n}\n\nfunction mouseMoveHandler(e) {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables;\n    // if we're dragging anything...\n    if (mouseEventVars.dragok) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        // get the current mouse position\n        const mx = parseInt(e.clientX - pm.canvasOffsetX);\n        const my = parseInt(e.clientY - pm.canvasOffsetY);\n\n        // calculate the distance the mouse has moved\n        // since the last mousemove\n        const dx = mx - mouseEventVars.startX;\n        const dy = my - mouseEventVars.startY;\n\n        // move each rect that isDragging\n        // by the distance the mouse has moved\n        // since the last mousemove\n        for (let i = 0; i < pm.rectangles.length; i++) {\n            const r = pm.rectangles[i];\n            if (r.isDragging) {\n                r.x += dx;\n                r.y += dy;\n            }\n        }\n\n        // redraw the scene with the new rect positions\n        drawOnCanvas.drawAll();\n\n        // reset the starting mouse position for the next mousemove\n        mouseEventVars.startX = mx;\n        mouseEventVars.startY = my;\n    }\n}\n\nfunction setupMouseEventVariables() {\n    const pm = window.plantManager;\n    const mouseEventVars = pm.mouseEventVariables = {};\n    mouseEventVars.dragok = false;\n    mouseEventVars.startX = undefined;\n    mouseEventVars.startY = undefined;\n}\n\nfunction post(path, data) {\n    return window.fetch(path, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n}\n\nmodule.exports = {\n    mouseUpHandler,\n    mouseDownHandler,\n    mouseMoveHandler,\n    setupMouseEventVariables\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}