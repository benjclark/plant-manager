{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/app.js","src/http-requests.js"],"names":[],"mappingslKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const httpRequests = require('./http-requests');\n\n$('[data-plant-date-planted]').datepicker({format: 'yyyy/mm/dd'});\n\nfunction closeAllOverlays() {\n    const overlays = document.querySelectorAll('.overlay');\n    overlays.forEach(el => {el.classList.add('hidden')});\n}\n\nfunction retrieveBedFromWindowObject(name) {\n    const beds = window.plantManager.beds;\n    for (let i = 0; i < beds.length; i++) {\n        if (beds[i].name === name) {\n            return beds[i];\n        }\n    }\n\n}\n\nfunction createBedRectInWindow() {\n    const createBedForm = document.querySelector('form[data-create-bed]');\n    window.plantManager.beds.push({\n        name: createBedForm.querySelector('input[data-bed-name]').value,\n        x: 200,\n        y: 300,\n        width: createBedForm.querySelector('input[data-bed-width]').value,\n        height: createBedForm.querySelector('input[data-bed-height]').value,\n        fill: createBedForm.querySelector('input[data-bed-colour]').value,\n        soil_characteristics: createBedForm.querySelector('select[data-bed-soil-characteristics]').value,\n        bed_type: createBedForm.querySelector('select[data-bed-type]').value,\n        isDragging: false\n    });\n}\n\nfunction updateBedRectInWindow() {\n    const updateBedForm = document.querySelector('form[data-update-bed]');\n    const name = updateBedForm.querySelector('[data-bed-name]').value;\n    const bed = retrieveBedFromWindowObject(name);\n    bed.name = name;\n    bed.width = parseInt(updateBedForm.querySelector('[data-bed-width]').value, 10);\n    bed.height = parseInt(updateBedForm.querySelector('[data-bed-height]').value, 10);\n    bed.fill = updateBedForm.querySelector('[data-bed-colour]').value;\n    bed.soilCharacteristics = updateBedForm.querySelector('[data-bed-soil-characteristics]').value;\n    bed.type = updateBedForm.querySelector('[data-bed-type]').value;\n}\n\nfunction populateBedDropdowns(bedObj) {\n    const name = bedObj.bed_name;\n    Array.prototype.slice.call(document.querySelectorAll('select[data-plant-bed]')).forEach(selectEl => {\n        const el = document.createElement('option');\n        el.setAttribute('value', name);\n        el.textContent = name;\n        selectEl.appendChild(el);\n    })\n}\n\ndocument.querySelector('form[data-create-plant]').addEventListener('submit', event => {\n    event.preventDefault();\n    httpRequests.sendCreatePlantRequest();\n    closeAllOverlays();\n});\n\ndocument.querySelector('form[data-create-bed]').addEventListener('submit', event => {\n    event.preventDefault();\n    httpRequests.sendCreateBedRequest();\n    createBedRectInWindow();\n    window.plantManager.drawAll();\n    closeAllOverlays();\n});\n\ndocument.querySelector('button[data-update-beds]').addEventListener('click', event => {\n    event.preventDefault();\n    httpRequests.sendSaveAllBedPositionsRequest();\n});\n\ndocument.querySelector('input[data-save-bed]').addEventListener('click', event => {\n    event.preventDefault();\n    updateBedRectInWindow();\n    httpRequests.sendSaveBedRequest();\n    window.plantManager.drawAll();\n});\n\ndocument.querySelector('input[data-delete-bed]').addEventListener('click', event => {\n    event.preventDefault();\n    httpRequests.sendDeleteBedRequest();\n    window.plantManager.drawAll();\n});\n\n[].slice.call(document.querySelectorAll('[data-open-overlay]')).forEach(button => {\n    const overlayName = button.dataset.openOverlay;\n    button.addEventListener('click', event => {\n        event.preventDefault();\n        document.querySelector(`div[data-${overlayName}-overlay]`).classList.remove('hidden');\n    });\n});\n\n[].slice.call(document.querySelectorAll('[data-close-overlay]')).forEach(button => {\n    const overlayName = button.dataset.closeOverlay;\n    button.addEventListener('click', event => {\n        event.preventDefault();\n        document.querySelector(`div[data-${overlayName}-overlay]`).classList.add('hidden');\n    });\n});\n\nfunction drawAnImage(fileName) {\n    const canvas = document.querySelector('canvas');\n    const ctx = canvas.getContext('2d');\n    const image = new Image();\n    image.src = `/${fileName}`;\n    image.onload = () => {\n        ctx.drawImage(image, 0, 0, 100, 100);\n    };\n    window.plantManager.plants.push({\n        name: fileName,\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100,\n        fill: 'rgba(255, 255, 255, 0.40)',\n        bed: null,\n        type: null,\n        datePlanted: null,\n        lastCrop: null,\n        nextCrop: null,\n        isDragging: false,\n        imageFileName: fileName\n    })\n}\n\nhttpRequests.get('/getBeds').then(response => {\n    response.json().then(data => {\n        let i = 1;\n        data.forEach(obj => {\n            window.plantManager.beds.push({\n                name: obj.bed_name,\n                x: obj.bed_x,\n                y: obj.bed_y,\n                width: obj.bed_width,\n                height: obj.bed_height,\n                fill: obj.bed_colour,\n                soil_characteristics: obj.bed_soil_characteristics,\n                bed_type: obj.bed_type,\n                isDragging: false,\n            });\n            if(i < 32) {\n                document.querySelector(`[data-table-name-${i}]`).setAttribute('value', obj.bed_name);\n                document.querySelector(`[data-table-type-${i}]`).setAttribute('value', obj.bed_type);\n                document.querySelector(`[data-table-soil-characteristics-${i}]`).setAttribute('value', obj.bed_soil_characteristics);\n                document.querySelector(`[data-table-name-${i}]`).dataset.empty = \"false\";\n                document.querySelector(`[data-table-type-${i}]`).dataset.empty = \"false\";\n                document.querySelector(`[data-table-soil-characteristics-${i}]`).dataset.empty = \"false\";\n                document.querySelector(`[data-tr-${i}]`).dataset.empty = \"false\";\n                i++;\n            }\n            populateBedDropdowns(obj);\n        });\n        window.plantManager.drawAll();\n        drawAnImage('onion.svg');\n        window.plantManager.drawAll();\n\n    });\n});\n","function sendCreatePlantRequest() {\n    const createPlantForm = document.querySelector('form[data-create-plant]');\n    const plant_name = createPlantForm.querySelector('input[data-plant-name]').value;\n    const date_planted = createPlantForm.querySelector('input[data-plant-date-planted]').value;\n    post('/createPlant', {plant_name, date_planted});\n}\n\nfunction sendCreateBedRequest() {\n    const createBedForm = document.querySelector('form[data-create-bed]');\n    const bed_name = createBedForm.querySelector('input[data-bed-name]').value;\n    const bed_soil_characteristics = createBedForm.querySelector('select[data-bed-soil-characteristics]').value;\n    const bed_type = createBedForm.querySelector('select[data-bed-type]').value;\n    const bed_width = createBedForm.querySelector('input[data-bed-width]').value;\n    const bed_height = createBedForm.querySelector('input[data-bed-height]').value;\n    const bed_colour = createBedForm.querySelector('input[data-bed-colour]').value;\n    const bed_x = 200;\n    const bed_y = 300;\n    post('/createBed', {bed_name, bed_soil_characteristics, bed_type, bed_width, bed_height, bed_colour, bed_x, bed_y});\n}\n\nfunction sendSaveAllBedPositionsRequest() {\n    const pm = window.plantManager;\n    for (let z = 0; z < pm.beds.length; z++) {\n        post('/updateBedPosition',{bed_name: pm.beds[z].name, bed_x: pm.beds[z].x, bed_y: pm.beds[z].y});\n    }\n}\n\nfunction sendSaveBedRequest() {\n    const updateBedForm = document.querySelector('form[data-update-bed]');\n    const name = updateBedForm.querySelector('[data-bed-name]').value;\n    const width = updateBedForm.querySelector('[data-bed-width]').value;\n    const height = updateBedForm.querySelector('[data-bed-height]').value;\n    const fill = updateBedForm.querySelector('[data-bed-colour]').value;\n    const soilCharacteristics = updateBedForm.querySelector('[data-bed-soil-characteristics]').value;\n    const type = updateBedForm.querySelector('[data-bed-type]').value;\n    post('/updateBed',{bed_name: name, bed_soil_characteristics: soilCharacteristics, bed_type: type, bed_width: width, bed_height: height, bed_colour: fill});\n}\n\nfunction sendDeleteBedRequest() {\n    const updateBedForm = document.querySelector('form[data-update-bed]');\n    const name = updateBedForm.querySelector('[data-bed-name]').value;\n    window.plantManager.rectangles = window.plantManager.rectangles.filter(obj => {\n        return obj.name !== name;\n    });\n    post('/deleteBed',{bed_name: name});\n}\n\nfunction post(path, data) {\n    return window.fetch(path, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n}\n\nfunction get(path) {\n    return window.fetch(path, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Cache-Control': 'no-cache, no-store, must-revalidate',\n            'Pragma': 'no-cache',\n            'Expires': 0\n        }\n    });\n}\n\nmodule.exports = {\n    sendCreatePlantRequest,\n    sendCreateBedRequest,\n    sendSaveAllBedPositionsRequest,\n    sendSaveBedRequest,\n    sendDeleteBedRequest,\n    get,\n    post\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}